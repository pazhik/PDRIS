- hosts: all
  become: yes

  vars:
    db_user: admin
    db_password: Passw0rd
    db_name: testdb

  tasks:

    - name: "Install packages"
      yum: "name={{ item }} state=present"
      with_items:
        - postgresql
        - postgresql-server
        - python3-psycopg2
      when: ansible_os_family == 'RedHat'

    - name: "Install packages"
      apt: "name={{ item }} state=present"
      with_items:
        - postgresql
        - postgresql-contrib
        - libpq-dev
        - python3-psycopg2
      when: ansible_os_family == 'Debian'
 
    - name: "Start and enable services"
      service: "name={{ item }} state=started enabled=yes"
      with_items:
        - postgresql

    - name: "Create app database"
      postgresql_db:
        state: present
        name: "{{ db_name }}"
      become: yes
      become_user: postgres

    - name: "Create db user"
      postgresql_user:
        state: present
        name: "{{ db_user }}"
        password: "{{ db_password }}"
      become: yes
      become_user: postgres

    - name: "Grant db user access to app db"
      postgresql_privs:
        type: database
        database: "{{ db_name }}"
        roles: "{{ db_user }}"
        grant_option: no
        privs: all
      become: yes
      become_user: postgres

    - name: "Allow md5 connection for the db user"
      postgresql_pg_hba:
        dest: "~/data/pg_hba.conf"
        contype: host
        databases: all
        method: md5
        users: "{{ db_user }}"
        create: true
      become: yes
      become_user: postgres
      notify: restart postgres

    - name: Creates directory for sqlScript
      file:
        path: /tmp
        state: directory

    - name: Copy sql_sqript
      copy:
        src: tmp/dump.sql
        dest: /tmp
        mode: preserve

    - name: "Add some dummy data to our database"
      become: true
      become_user: postgres
      shell: psql {{ db_name }} < /tmp/dump.sql

  handlers:
    - name: restart postgres
      service: name=postgresql state=restarted